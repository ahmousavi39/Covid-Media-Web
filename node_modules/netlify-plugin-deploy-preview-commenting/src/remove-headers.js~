const { readFile, writeFile } = require('fs')
const { promisify } = require('util')

<<<<<<< HEAD
const frameOptionsRegEx = /\n^\s*x-frame-options.*$/gim
=======
const pathExists = require('path-exists')

const frameOptionsRegEx = /^\s*x-frame-options.*$/gim
>>>>>>> Improve performance

const pReadFile = promisify(readFile)
const pWriteFile = promisify(writeFile)

// remove iframe security headers so DPC works
const removeAllHeaders = async function ({ PUBLISH_DIR, CONFIG_PATH, logger }) {
  await Promise.all([removeHeaders(`${PUBLISH_DIR}/_headers`, logger), removeHeaders(CONFIG_PATH, logger)])
}

const removeHeaders = async (filePath, logger) => {
  if (!(await pathExists(filePath))) {
    return
  }

  const headers = await pReadFile(filePath, 'utf-8')

  if (!frameOptionsRegEx.test(headers)) {
    return
  }

  const updatedContents = headers.replace(frameOptionsRegEx, '')

  await pWriteFile(filePath, updatedContents, 'utf-8')

  logger.log(`rewrote ${filePath} to:`)
  logger.log(updatedContents)
}

module.exports = {
  removeAllHeaders,
}
