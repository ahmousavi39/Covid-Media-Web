{"ast":null,"code":"var _jsxFileName = \"/home/workspace/Desktop/Files/Projects/Programming/Working On/Covid Media/Web/covidmedia_v.3.1.0/src/components/Cards/Cards.jsx\";\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nconst Cards = props => {\n  const {\n    t\n  } = useTranslation();\n\n  if (!JSON.stringify(props.data.cases)) {\n    return /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  const {\n    isDaily\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    component: Card,\n    xc: 12,\n    md: 3,\n    className: cx(styles.card, styles.infected),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: styles.cardphone,\n    style: {\n      paddingLeft: '0%',\n      paddingRight: '1',\n      paddingTop: '2px',\n      paddingBottom: '9px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, t('con.1')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CountUp, {\n    start: 0,\n    end: isDaily ? props.data.todayCases.toString() : props.data.cases.toString(),\n    duration: 2.5,\n    separator: \",\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 52\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, new Date(props.data.updated).toDateString()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    component: Card,\n    xc: 12,\n    md: 3,\n    className: cx(styles.card, styles.recovered),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: styles.cardphone,\n    style: {\n      paddingLeft: '0%',\n      paddingRight: '1',\n      paddingTop: '2px',\n      paddingBottom: '9px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, t('rec.1')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CountUp, {\n    start: 0,\n    end: isDaily ? props.data.todayRecovered.toString() : props.data.recovered.toString(),\n    duration: 2.5,\n    separator: \",\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, new Date(props.data.updated).toDateString()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    component: Card,\n    xc: 12,\n    md: 3,\n    className: cx(styles.card, styles.deaths),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: styles.cardphone,\n    style: {\n      paddingLeft: '0%',\n      paddingRight: '1',\n      paddingTop: '2px',\n      paddingBottom: '9px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, t('dea.1')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CountUp, {\n    start: 0,\n    end: isDaily ? props.data.todayDeaths.toString() : props.data.deaths.toString(),\n    duration: 2.5,\n    separator: \",\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, new Date(props.data.updated).toDateString()))), isDaily ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    component: Card,\n    xc: 12,\n    md: 3,\n    className: cx(styles.card, styles.active),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: styles.cardphone,\n    style: {\n      paddingLeft: '0%',\n      paddingRight: '1',\n      paddingTop: '2px',\n      paddingBottom: '9px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, t('Active.1')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CountUp, {\n    start: 0,\n    end: props.data.active.toString(),\n    duration: 2.5,\n    separator: \",\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, new Date(props.data.updated).toDateString()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    component: Card,\n    xc: 12,\n    md: 3,\n    className: cx(styles.card, styles.tests),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: styles.cardphone,\n    style: {\n      paddingLeft: '0%',\n      paddingRight: '1',\n      paddingTop: '2px',\n      paddingBottom: '9px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, t('Tests.1')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CountUp, {\n    start: 0,\n    end: props.data.tests.toString(),\n    duration: 2.5,\n    separator: \",\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, new Date(props.data.updated).toDateString()))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    component: Card,\n    xc: 12,\n    md: 3,\n    className: cx(styles.card, styles.critical),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: styles.cardphone,\n    style: {\n      paddingLeft: '0%',\n      paddingRight: '1',\n      paddingTop: '2px',\n      paddingBottom: '9px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, t('CriticalCases.1')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CountUp, {\n    start: 0,\n    end: props.data.critical.toString(),\n    duration: 2.5,\n    separator: \",\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, new Date(props.data.updated).toDateString()))))));\n};\n\nexport default Cards;","map":{"version":3,"sources":["/home/workspace/Desktop/Files/Projects/Programming/Working On/Covid Media/Web/covidmedia_v.3.1.0/src/components/Cards/Cards.jsx"],"names":["React","useState","Card","CardContent","Typography","Grid","StylesProvider","styles","CountUp","cx","useTranslation","i18next","Cards","props","t","JSON","stringify","data","cases","isDaily","container","card","infected","cardphone","paddingLeft","paddingRight","paddingTop","paddingBottom","todayCases","toString","Date","updated","toDateString","recovered","todayRecovered","deaths","todayDeaths","active","tests","critical"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core'\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nconst Cards = ( props ) => {\n    const { t } = useTranslation();\n    \n    if(!JSON.stringify(props.data.cases)){\n        return <b><div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\"></span>\n      </div></b>\n    }\n\n    const {isDaily} = props;\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xc={12} md={3} className={cx(styles.card, styles.infected)} >\n                    <CardContent className={styles.cardphone}  style={{paddingLeft : '0%', paddingRight:'1',paddingTop : '2px' , paddingBottom : '9px'} }>\n                        <Typography color=\"textSecondary\" gutterBottom >{t('con.1')}</Typography>\n                        <Typography variant=\"h5\"  ><CountUp start={0} end={\n                            isDaily ? ( props.data.todayCases).toString()\n                            :\n                           (props.data.cases).toString()\n                           } \n                           duration={2.5} separator=\",\"  /></Typography>\n                        <Typography color=\"textSecondary\" >{new  Date(props.data.updated).toDateString()}</Typography>\n                    </CardContent>   \n                </Grid>\n                <Grid item component={Card} xc={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent className={styles.cardphone}  style={{paddingLeft : '0%', paddingRight:'1',paddingTop : '2px' , paddingBottom : '9px'} }>\n                        <Typography color=\"textSecondary\" gutterBottom>{(t('rec.1'))}</Typography>\n                        <Typography variant=\"h5\"><CountUp start={0} end={\n                            isDaily ? \n                            (props.data.todayRecovered).toString()\n                            :\n                            (props.data.recovered).toString()\n                            } duration={2.5} separator=\",\" /></Typography>\n                        <Typography color=\"textSecondary\">{new Date(props.data.updated).toDateString()}</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xc={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent className={styles.cardphone}  style={{paddingLeft : '0%', paddingRight:'1',paddingTop : '2px' , paddingBottom : '9px'} }>\n                        <Typography color=\"textSecondary\" gutterBottom>{t('dea.1')}</Typography>\n                        <Typography variant=\"h5\"><CountUp start={0} end={\n                            isDaily ?\n                            (props.data.todayDeaths).toString()\n                            :\n                            (props.data.deaths).toString()\n                            } duration={2.5} separator=\",\" /></Typography>\n                        <Typography color=\"textSecondary\">{new  Date(props.data.updated).toDateString()}</Typography>\n                       \n                    </CardContent>\n                </Grid>\n\n                {\n                    isDaily ?\n                    null :(\n                        <>\n                <Grid item component={Card} xc={12} md={3} className={cx(styles.card, styles.active)}>\n                    <CardContent className={styles.cardphone}  style={{paddingLeft : '0%', paddingRight:'1',paddingTop : '2px' , paddingBottom : '9px'} }>\n                        <Typography color=\"textSecondary\" gutterBottom>{t('Active.1')}</Typography>\n                        <Typography variant=\"h5\"><CountUp start={0} end={\n                            (props.data.active).toString()\n                            } duration={2.5} separator=\",\" /></Typography>\n                        <Typography color=\"textSecondary\">{new  Date(props.data.updated).toDateString()}</Typography>\n                      \n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xc={12} md={3} className={cx(styles.card, styles.tests)}>\n                    <CardContent className={styles.cardphone}  style={{paddingLeft : '0%', paddingRight:'1',paddingTop : '2px' , paddingBottom : '9px'} }>\n                        <Typography color=\"textSecondary\" gutterBottom>{t('Tests.1')}</Typography>\n                        <Typography variant=\"h5\"><CountUp start={0} end={\n                            (props.data.tests).toString()\n                            } duration={2.5} separator=\",\" /></Typography>\n                        <Typography color=\"textSecondary\">{new  Date(props.data.updated).toDateString()}</Typography>\n                       \n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xc={12} md={3} className={cx(styles.card, styles.critical)}>\n                    <CardContent className={styles.cardphone}  style={{paddingLeft : '0%', paddingRight:'1',paddingTop : '2px' , paddingBottom : '9px'} }>\n                        <Typography color=\"textSecondary\" gutterBottom>{t('CriticalCases.1')}</Typography>\n                        <Typography variant=\"h5\"><CountUp start={0} end={\n                            (props.data.critical).toString()\n                        } duration={2.5} separator=\",\" /></Typography>\n                        <Typography color=\"textSecondary\">{new  Date(props.data.updated).toDateString()}</Typography>\n                     \n                    </CardContent>\n                </Grid>\n                </>\n                    )\n}\n            </Grid>\n                    \n        </div>\n    )\n}\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}