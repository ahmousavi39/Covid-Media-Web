{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\n\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\n\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\n\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\n\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n\nfunction getInverseObj(obj) {\n  return Object.keys(obj).sort().reduce(function (inverse, name) {\n    inverse[obj[name]] = \"&\" + name + \";\";\n    return inverse;\n  }, {});\n}\n\nfunction getInverseReplacer(inverse) {\n  var single = [];\n  var multiple = [];\n\n  for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n    var k = _a[_i];\n\n    if (k.length === 1) {\n      // Add value to single array\n      single.push(\"\\\\\" + k);\n    } else {\n      // Add value to multiple array\n      multiple.push(k);\n    }\n  } // Add ranges to single characters.\n\n\n  single.sort();\n\n  for (var start = 0; start < single.length - 1; start++) {\n    // Find the end of a run of characters\n    var end = start;\n\n    while (end < single.length - 1 && single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n      end += 1;\n    }\n\n    var count = 1 + end - start; // We want to replace at least three characters\n\n    if (count < 3) continue;\n    single.splice(start, count, single[start] + \"-\" + single[end]);\n  }\n\n  multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n  return new RegExp(multiple.join(\"|\"), \"g\");\n}\n\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\n\nfunction singleCharReplacer(c) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\n\nfunction getInverse(inverse, re) {\n  return function (data) {\n    return data.replace(re, function (name) {\n      return inverse[name];\n    }).replace(reNonASCII, singleCharReplacer);\n  };\n}\n\nvar reXmlChars = getInverseReplacer(inverseXML);\n\nfunction escape(data) {\n  return data.replace(reXmlChars, singleCharReplacer).replace(reNonASCII, singleCharReplacer);\n}\n\nexports.escape = escape;","map":{"version":3,"sources":["/home/workspace/Desktop/Files/Projects/Programming/Working On/Covid Media/Web/covidmedia_v.3.1.0/node_modules/dom-serializer/node_modules/entities/lib/encode.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","escape","encodeHTML","encodeXML","xml_json_1","require","inverseXML","getInverseObj","default","xmlReplacer","getInverseReplacer","getInverse","entities_json_1","inverseHTML","htmlReplacer","obj","keys","sort","reduce","inverse","name","single","multiple","_i","_a","length","k","push","start","end","charCodeAt","count","splice","unshift","join","RegExp","reNonASCII","singleCharReplacer","c","codePointAt","toString","toUpperCase","re","data","replace","reXmlChars"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nfunction singleCharReplacer(c) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reXmlChars = getInverseReplacer(inverseXML);\nfunction escape(data) {\n    return data\n        .replace(reXmlChars, singleCharReplacer)\n        .replace(reNonASCII, singleCharReplacer);\n}\nexports.escape = escape;\n"]},"metadata":{},"sourceType":"script"}