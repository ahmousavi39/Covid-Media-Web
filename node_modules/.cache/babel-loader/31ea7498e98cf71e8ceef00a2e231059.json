{"ast":null,"code":"import _slicedToArray from\"/home/workspace/Desktop/Files/Projects/Programming/Working On/Covid Media/Web/covidmedia_v.3.1.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/home/workspace/Desktop/Files/Projects/Programming/Working On/Covid Media/Web/covidmedia_v.3.1.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/workspace/Desktop/Files/Projects/Programming/Working On/Covid Media/Web/covidmedia_v.3.1.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var url=\"https://corona.lmao.ninja/v3/covid-19\";var urlHisory='https://disease.sh/v3/covid-19/historical';export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var changeableUrl,_yield$axios$get,_yield$axios$get$data,updated,cases,todayCases,deaths,todayDeaths,recovered,todayRecovered,active,critical,tests,modifieData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:changeableUrl=\"\".concat(url,\"/all\");if(country){changeableUrl=\"\".concat(url,\"/countries/\").concat(country);}_context.prev=2;_context.next=5;return axios.get(changeableUrl);case 5:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;updated=_yield$axios$get$data.updated;cases=_yield$axios$get$data.cases;todayCases=_yield$axios$get$data.todayCases;deaths=_yield$axios$get$data.deaths;todayDeaths=_yield$axios$get$data.todayDeaths;recovered=_yield$axios$get$data.recovered;todayRecovered=_yield$axios$get$data.todayRecovered;active=_yield$axios$get$data.active;critical=_yield$axios$get$data.critical;tests=_yield$axios$get$data.tests;modifieData={updated:updated,cases:cases,todayCases:todayCases,deaths:deaths,todayDeaths:todayDeaths,recovered:recovered,todayRecovered:todayRecovered,active:active,critical:critical,tests:tests};return _context.abrupt(\"return\",modifieData);case 21:_context.prev=21;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 24:case\"end\":return _context.stop();}}},_callee,null,[[2,21]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();export var fetchHistoricalData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(country){var changeableUrl,data,casesArray,deathsArray,recoveredArray,dateArray,newCasesArray,newDeathsArray,newRecoveredArray,_i,_Object$entries,_Object$entries$_i,key,value,_i2,_Object$entries2,_Object$entries2$_i,_key,_value,_i3,_Object$entries3,_Object$entries3$_i,_key2,_value2;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:changeableUrl=\"\".concat(urlHisory,\"/all?lastdays=all\");if(country){changeableUrl=\"\".concat(urlHisory,\"/\").concat(country,\"?lastdays=all\");}_context2.prev=2;_context2.next=5;return axios.get(changeableUrl);case 5:data=_context2.sent;if(country){data=data.data.timeline;}else{data=data.data;}casesArray=[];deathsArray=[];recoveredArray=[];dateArray=[];newCasesArray=[];newDeathsArray=[];newRecoveredArray=[];for(_i=0,_Object$entries=Object.entries(data.cases);_i<_Object$entries.length;_i++){_Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];casesArray.push(value);dateArray.push(key);}for(_i2=0,_Object$entries2=Object.entries(data.deaths);_i2<_Object$entries2.length;_i2++){_Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),_key=_Object$entries2$_i[0],_value=_Object$entries2$_i[1];deathsArray.push(_value);}for(_i3=0,_Object$entries3=Object.entries(data.recovered);_i3<_Object$entries3.length;_i3++){_Object$entries3$_i=_slicedToArray(_Object$entries3[_i3],2),_key2=_Object$entries3$_i[0],_value2=_Object$entries3$_i[1];recoveredArray.push(_value2);}casesArray.map(function(value,index){if(index==0){var splitted=dateArray[index].split(\"/\");var dateStr=\"20\"+splitted[2]+\"-\"+splitted[0]+\"-\"+splitted[1];var dateFinal=new Date(dateStr);newCasesArray.push({'x':dateFinal,'y':value});}else{var lastIndex=index-1;var lastIndexValue=casesArray[lastIndex];var newIndexValue=value-lastIndexValue;var splitted=dateArray[index].split(\"/\");var dateStr=\"20\"+splitted[2]+\"-\"+splitted[0]+\"-\"+splitted[1];var _dateFinal=new Date(dateStr);newCasesArray.push({'x':_dateFinal,'y':newIndexValue});}});deathsArray.map(function(value,index){if(index==0){var splitted=dateArray[index].split(\"/\");var dateStr=\"20\"+splitted[2]+\"-\"+splitted[0]+\"-\"+splitted[1];var dateFinal=new Date(dateStr);newDeathsArray.push({'x':dateFinal,'y':value});}else{var lastIndex=index-1;var lastIndexValue=deathsArray[lastIndex];var newIndexValue=value-lastIndexValue;var splitted=dateArray[index].split(\"/\");var dateStr=\"20\"+splitted[2]+\"-\"+splitted[0]+\"-\"+splitted[1];var _dateFinal2=new Date(dateStr);newDeathsArray.push({'x':_dateFinal2,'y':newIndexValue});}});recoveredArray.map(function(value,index){if(index==0){var splitted=dateArray[index].split(\"/\");var dateStr=\"20\"+splitted[2]+\"-\"+splitted[0]+\"-\"+splitted[1];var dateFinal=new Date(dateStr);newRecoveredArray.push({'x':dateFinal,'y':value});}else{var lastIndex=index-1;var lastIndexValue=recoveredArray[lastIndex];var newIndexValue;if(!country){switch(index){case 325:newIndexValue=516003;break;case 326:newIndexValue=411665;break;case 327:newIndexValue=527725;break;case 328:newIndexValue=499836;break;case 329:newIndexValue=598651;break;default:newIndexValue=value-lastIndexValue;}}else{newIndexValue=value-lastIndexValue;}var splitted=dateArray[index].split(\"/\");var dateStr=\"20\"+splitted[2]+\"-\"+splitted[0]+\"-\"+splitted[1];var _dateFinal3=new Date(dateStr);newRecoveredArray.push({'x':_dateFinal3,'y':newIndexValue});}});// newCasesArray = newCasesArray.slice(-30);\n// newDeathsArray = newDeathsArray.slice(-30);\n// newRecoveredArray = newRecoveredArray.slice(-30);\nreturn _context2.abrupt(\"return\",[newCasesArray,newDeathsArray,newRecoveredArray]);case 23:_context2.prev=23;_context2.t0=_context2[\"catch\"](2);console.log(_context2.t0);case 26:case\"end\":return _context2.stop();}}},_callee2,null,[[2,23]]);}));return function fetchHistoricalData(_x2){return _ref2.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$axios$get2,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get(\"\".concat(url,\"/countries\"));case 3:_yield$axios$get2=_context3.sent;data=_yield$axios$get2.data;return _context3.abrupt(\"return\",data.map(function(data){return data.country;}));case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchCountries(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/workspace/Desktop/Files/Projects/Programming/Working On/Covid Media/Web/covidmedia_v.3.1.0/src/api/index.js"],"names":["axios","url","urlHisory","fetchData","country","changeableUrl","get","data","updated","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","active","critical","tests","modifieData","console","log","fetchHistoricalData","timeline","casesArray","deathsArray","recoveredArray","dateArray","newCasesArray","newDeathsArray","newRecoveredArray","Object","entries","key","value","push","map","index","splitted","split","dateStr","dateFinal","Date","lastIndex","lastIndexValue","newIndexValue","fetchCountries"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst url = \"https://corona.lmao.ninja/v3/covid-19\";\nconst urlHisory = 'https://disease.sh/v3/covid-19/historical'\n\nexport const fetchData = async (country) => {\n    let changeableUrl = `${url}/all`;\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const { data: {\n            updated,\n            cases,\n            todayCases,\n            deaths,\n            todayDeaths,\n            recovered,\n            todayRecovered,\n            active,\n            critical,\n            tests\n        } } = await axios.get(changeableUrl);\n\n        const modifieData = {\n            updated,\n            cases,\n            todayCases,\n            deaths,\n            todayDeaths,\n            recovered,\n            todayRecovered,\n            active,\n            critical,\n            tests\n        };\n\n        return modifieData;\n    } catch (error) {\n        console.log(error);\n\n    }\n}\n\n\n\nexport const fetchHistoricalData = async (country) => {\n    let changeableUrl = `${urlHisory}/all?lastdays=all`;\n    if (country) {\n        changeableUrl = `${urlHisory}/${country}?lastdays=all`\n    }\n\n    try {\n\n        let data = await axios.get(changeableUrl);\n\n        if (country) {\n            data = data.data.timeline;\n        } else {\n            data = data.data;\n        }\n\n        let casesArray = [];\n        let deathsArray = [];\n        let recoveredArray = [];\n\n        let dateArray = [];\n\n        let newCasesArray = [];\n        let newDeathsArray = [];\n        let newRecoveredArray = [];\n\n\n        for (const [key, value] of Object.entries(data.cases)) {\n            casesArray.push(value);\n            dateArray.push(key);\n        }\n\n        for (const [key, value] of Object.entries(data.deaths)) {\n            deathsArray.push(value);\n        }\n\n        for (const [key, value] of Object.entries(data.recovered)) {\n            recoveredArray.push(value);\n        }\n\n        casesArray.map((value, index) => {\n            if (index == 0) {\n                var splitted = dateArray[index].split(\"/\");\n                var dateStr = \"20\" + splitted[2] + \"-\" + splitted[0] + \"-\" + splitted[1];\n                const dateFinal = new Date(dateStr);\n                newCasesArray.push({ 'x': dateFinal, 'y': value });\n            } else {\n                let lastIndex = index - 1;\n                let lastIndexValue = casesArray[lastIndex];\n                let newIndexValue = value - lastIndexValue;\n\n                var splitted = dateArray[index].split(\"/\");\n                var dateStr = \"20\" + splitted[2] + \"-\" + splitted[0] + \"-\" + splitted[1];\n                const dateFinal = new Date(dateStr);\n                newCasesArray.push({ 'x': dateFinal, 'y': newIndexValue });\n            }\n        })\n\n        deathsArray.map((value, index) => {\n            if (index == 0) {\n                var splitted = dateArray[index].split(\"/\");\n                var dateStr = \"20\" + splitted[2] + \"-\" + splitted[0] + \"-\" + splitted[1];\n                const dateFinal = new Date(dateStr);\n                newDeathsArray.push({ 'x': dateFinal, 'y': value });\n            } else {\n                let lastIndex = index - 1;\n                let lastIndexValue = deathsArray[lastIndex];\n                let newIndexValue = value - lastIndexValue;\n\n                var splitted = dateArray[index].split(\"/\");\n                var dateStr = \"20\" + splitted[2] + \"-\" + splitted[0] + \"-\" + splitted[1];\n                const dateFinal = new Date(dateStr);\n                newDeathsArray.push({ 'x': dateFinal, 'y': newIndexValue });\n            }\n        })\n\n        recoveredArray.map((value, index) => {\n            if (index == 0) {\n                var splitted = dateArray[index].split(\"/\");\n                var dateStr = \"20\" + splitted[2] + \"-\" + splitted[0] + \"-\" + splitted[1];\n                const dateFinal = new Date(dateStr);\n                newRecoveredArray.push({ 'x': dateFinal, 'y': value });\n            } else {\n                let lastIndex = index - 1;\n                let lastIndexValue = recoveredArray[lastIndex];\n                let newIndexValue;\n\n                if (!country) {\n                    switch (index) {\n                        case 325:\n                            newIndexValue = 516003;\n                            break;\n                        case 326:\n                            newIndexValue = 411665;\n                            break;\n                        case 327:\n                            newIndexValue = 527725;\n                            break;\n                        case 328:\n                            newIndexValue = 499836;\n                            break;\n                        case 329:\n                            newIndexValue = 598651;\n                            break;\n                        default:\n                            newIndexValue = value - lastIndexValue;\n                    }\n                } else {\n                    newIndexValue = value - lastIndexValue;\n                }\n                var splitted = dateArray[index].split(\"/\");\n                var dateStr = \"20\" + splitted[2] + \"-\" + splitted[0] + \"-\" + splitted[1];\n                const dateFinal = new Date(dateStr);\n                newRecoveredArray.push({ 'x': dateFinal, 'y': newIndexValue });\n            }\n        })\n\n        // newCasesArray = newCasesArray.slice(-30);\n        // newDeathsArray = newDeathsArray.slice(-30);\n        // newRecoveredArray = newRecoveredArray.slice(-30);\n\n        return [newCasesArray, newDeathsArray, newRecoveredArray];\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\n\nexport const fetchCountries = async () => {\n    try {\n        const { data } = await axios.get(`${url}/countries`)\n        return data.map((data) => data.country)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}