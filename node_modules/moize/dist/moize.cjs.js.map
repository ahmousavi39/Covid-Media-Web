{"version":3,"file":"moize.cjs.js","sources":["../src/constants.ts","../src/utils.ts","../src/maxAge.ts","../src/stats.ts","../src/instance.ts","../src/component.ts","../src/maxArgs.ts","../src/serialize.ts","../src/options.ts","../src/updateCacheForKey.ts","../src/index.ts"],"sourcesContent":["import { Options } from './types';\n\n/**\n * @private\n *\n * @constant DEFAULT_OPTIONS\n */\nexport const DEFAULT_OPTIONS: Options = {\n    isDeepEqual: false,\n    isPromise: false,\n    isReact: false,\n    isSerialized: false,\n    isShallowEqual: false,\n    matchesArg: undefined,\n    matchesKey: undefined,\n    maxAge: undefined,\n    maxArgs: undefined,\n    maxSize: 1,\n    onExpire: undefined,\n    profileName: undefined,\n    serializer: undefined,\n    updateCacheForKey: undefined,\n    transformArgs: undefined,\n    updateExpire: false,\n};\n","import { DEFAULT_OPTIONS } from './constants';\nimport {\n    Expiration,\n    Fn,\n    IsEqual,\n    IsMatchingKey,\n    Key,\n    Moizeable,\n    Moized,\n    Options,\n} from './types';\n\n/**\n * @private\n *\n * @description\n * method to combine functions and return a single function that fires them all\n *\n * @param functions the functions to compose\n * @returns the composed function\n */\nexport function combine<Arg, Result>(\n    ...functions: Fn<Arg>[]\n): Fn<Arg, Result> | undefined {\n    return functions.reduce(function (f: any, g: any) {\n        if (typeof f === 'function') {\n            return typeof g === 'function'\n                ? function (this: any) {\n                      f.apply(this, arguments);\n                      g.apply(this, arguments);\n                  }\n                : f;\n        }\n\n        if (typeof g === 'function') {\n            return g;\n        }\n    });\n}\n\n/**\n * @private\n *\n * @description\n * method to compose functions and return a single function\n *\n * @param functions the functions to compose\n * @returns the composed function\n */\nexport function compose<Method>(...functions: Method[]): Method {\n    return functions.reduce(function (f: any, g: any) {\n        if (typeof f === 'function') {\n            return typeof g === 'function'\n                ? function (this: any) {\n                      return f(g.apply(this, arguments));\n                  }\n                : f;\n        }\n\n        if (typeof g === 'function') {\n            return g;\n        }\n    });\n}\n\n/**\n * @private\n *\n * @description\n * find the index of the expiration based on the key\n *\n * @param expirations the list of expirations\n * @param key the key to match\n * @returns the index of the expiration\n */\nexport function findExpirationIndex(expirations: Expiration[], key: Key) {\n    for (let index = 0; index < expirations.length; index++) {\n        if (expirations[index].key === key) {\n            return index;\n        }\n    }\n\n    return -1;\n}\n\n/**\n * @private\n *\n * @description\n * create function that finds the index of the key in the list of cache keys\n *\n * @param isEqual the function to test individual argument equality\n * @param isMatchingKey the function to test full key equality\n * @returns the function that finds the index of the key\n */\nexport function createFindKeyIndex(\n    isEqual: IsEqual,\n    isMatchingKey: IsMatchingKey | undefined\n) {\n    const areKeysEqual: IsMatchingKey =\n        typeof isMatchingKey === 'function'\n            ? isMatchingKey\n            : function (cacheKey: Key, key: Key) {\n                  for (let index = 0; index < key.length; index++) {\n                      if (!isEqual(cacheKey[index], key[index])) {\n                          return false;\n                      }\n                  }\n\n                  return true;\n              };\n\n    return function (keys: Key[], key: Key) {\n        for (let keysIndex = 0; keysIndex < keys.length; keysIndex++) {\n            if (\n                keys[keysIndex].length === key.length &&\n                areKeysEqual(keys[keysIndex], key)\n            ) {\n                return keysIndex;\n            }\n        }\n\n        return -1;\n    };\n}\n\n/**\n * @private\n *\n * @description\n * merge two options objects, combining or composing functions as necessary\n *\n * @param originalOptions the options that already exist on the method\n * @param newOptions the new options to merge\n * @returns the merged options\n */\nexport function mergeOptions(\n    originalOptions: Options,\n    newOptions: Options\n): Options {\n    return !newOptions || newOptions === DEFAULT_OPTIONS\n        ? originalOptions\n        : {\n              ...originalOptions,\n              ...newOptions,\n              onCacheAdd: combine(\n                  originalOptions.onCacheAdd,\n                  newOptions.onCacheAdd\n              ),\n              onCacheChange: combine(\n                  originalOptions.onCacheChange,\n                  newOptions.onCacheChange\n              ),\n              onCacheHit: combine(\n                  originalOptions.onCacheHit,\n                  newOptions.onCacheHit\n              ),\n              transformArgs: compose(\n                  originalOptions.transformArgs,\n                  newOptions.transformArgs\n              ),\n          };\n}\n\nexport function isMoized(fn: Moizeable | Moized | Options): fn is Moized {\n    return typeof fn === 'function' && fn.isMoized;\n}\n","import {\n    Cache,\n    Expiration,\n    Fn,\n    IsEqual,\n    IsMatchingKey,\n    Key,\n    OnCacheOperation,\n    Options,\n} from './types';\nimport { createFindKeyIndex, findExpirationIndex } from './utils';\n\n/**\n * @private\n *\n * @description\n * clear an active expiration and remove it from the list if applicable\n *\n * @param expirations the list of expirations\n * @param key the key to clear\n * @param shouldRemove should the expiration be removed from the list\n */\nexport function clearExpiration(\n    expirations: Expiration[],\n    key: Key,\n    shouldRemove?: boolean\n) {\n    const expirationIndex = findExpirationIndex(expirations, key);\n\n    if (expirationIndex !== -1) {\n        clearTimeout(expirations[expirationIndex].timeoutId);\n\n        if (shouldRemove) {\n            expirations.splice(expirationIndex, 1);\n        }\n    }\n}\n\n/**\n * @private\n *\n * @description\n * Create the timeout for the given expiration method. If the ability to `unref`\n * exists, then apply it to avoid process locks in NodeJS.\n *\n * @param expirationMethod the method to fire upon expiration\n * @param maxAge the time to expire after\n * @returns the timeout ID\n */\nexport function createTimeout(expirationMethod: () => void, maxAge: number) {\n    const timeoutId = setTimeout(expirationMethod, maxAge);\n\n    if (typeof timeoutId.unref === 'function') {\n        timeoutId.unref();\n    }\n\n    return timeoutId;\n}\n\n/**\n * @private\n *\n * @description\n * create a function that, when an item is added to the cache, adds an expiration for it\n *\n * @param expirations the mutable expirations array\n * @param options the options passed on initialization\n * @param isEqual the function to check argument equality\n * @param isMatchingKey the function to check complete key equality\n * @returns the onCacheAdd function to handle expirations\n */\nexport function createOnCacheAddSetExpiration(\n    expirations: Expiration[],\n    options: Options,\n    isEqual: IsEqual,\n    isMatchingKey: IsMatchingKey\n): OnCacheOperation {\n    const { maxAge } = options;\n\n    return function onCacheAdd(\n        cache: Cache,\n        moizedOptions: Options,\n        moized: Fn\n    ) {\n        const key: any = cache.keys[0];\n\n        if (findExpirationIndex(expirations, key) === -1) {\n            const expirationMethod = function () {\n                const findKeyIndex = createFindKeyIndex(isEqual, isMatchingKey);\n\n                const keyIndex: number = findKeyIndex(cache.keys, key);\n                const value: any = cache.values[keyIndex];\n\n                if (~keyIndex) {\n                    cache.keys.splice(keyIndex, 1);\n                    cache.values.splice(keyIndex, 1);\n\n                    if (typeof options.onCacheChange === 'function') {\n                        options.onCacheChange(cache, moizedOptions, moized);\n                    }\n                }\n\n                clearExpiration(expirations, key, true);\n\n                if (\n                    typeof options.onExpire === 'function' &&\n                    options.onExpire(key) === false\n                ) {\n                    cache.keys.unshift(key);\n                    cache.values.unshift(value);\n\n                    onCacheAdd(cache, moizedOptions, moized);\n\n                    if (typeof options.onCacheChange === 'function') {\n                        options.onCacheChange(cache, moizedOptions, moized);\n                    }\n                }\n            };\n\n            expirations.push({\n                expirationMethod,\n                key,\n                timeoutId: createTimeout(expirationMethod, maxAge),\n            });\n        }\n    };\n}\n\n/**\n * @private\n *\n * @description\n * creates a function that, when a cache item is hit, reset the expiration\n *\n * @param expirations the mutable expirations array\n * @param options the options passed on initialization\n * @returns the onCacheAdd function to handle expirations\n */\nexport function createOnCacheHitResetExpiration(\n    expirations: Expiration[],\n    options: Options\n): OnCacheOperation {\n    return function onCacheHit(cache: Cache) {\n        const key = cache.keys[0];\n        const expirationIndex = findExpirationIndex(expirations, key);\n\n        if (~expirationIndex) {\n            clearExpiration(expirations, key, false);\n\n            expirations[expirationIndex].timeoutId = createTimeout(\n                expirations[expirationIndex].expirationMethod,\n                options.maxAge\n            );\n        }\n    };\n}\n\n/**\n * @private\n *\n * @description\n * get the micro-memoize options specific to the maxAge option\n *\n * @param expirations the expirations for the memoized function\n * @param options the options passed to the moizer\n * @param isEqual the function to test equality of the key on a per-argument basis\n * @param isMatchingKey the function to test equality of the whole key\n * @returns the object of options based on the entries passed\n */\nexport function getMaxAgeOptions(\n    expirations: Expiration[],\n    options: Options,\n    isEqual: IsEqual,\n    isMatchingKey: IsMatchingKey\n): {\n    onCacheAdd: OnCacheOperation | undefined;\n    onCacheHit: OnCacheOperation | undefined;\n} {\n    const onCacheAdd =\n        typeof options.maxAge === 'number' && isFinite(options.maxAge)\n            ? createOnCacheAddSetExpiration(\n                  expirations,\n                  options,\n                  isEqual,\n                  isMatchingKey\n              )\n            : undefined;\n\n    return {\n        onCacheAdd,\n        onCacheHit:\n            onCacheAdd && options.updateExpire\n                ? createOnCacheHitResetExpiration(expirations, options)\n                : undefined,\n    };\n}\n","import {\n    Fn,\n    FunctionalComponent,\n    GlobalStatsObject,\n    OnCacheOperation,\n    Options,\n    StatsCache,\n    StatsProfile,\n} from './types';\n\nexport const statsCache: StatsCache = {\n    anonymousProfileNameCounter: 1,\n    isCollectingStats: false,\n    profiles: {},\n};\n\nlet hasWarningDisplayed = false;\n\nexport function clearStats(profileName?: string) {\n    if (profileName) {\n        delete statsCache.profiles[profileName];\n    } else {\n        statsCache.profiles = {};\n    }\n}\n\n/**\n * @private\n *\n * @description\n * activate stats collection\n *\n * @param isCollectingStats should stats be collected\n */\nexport function collectStats(isCollectingStats = true) {\n    statsCache.isCollectingStats = isCollectingStats;\n}\n\n/**\n * @private\n *\n * @description\n * create a function that increments the number of calls for the specific profile\n */\nexport function createOnCacheAddIncrementCalls(options: Options) {\n    const { profileName } = options;\n\n    return function () {\n        if (profileName && !statsCache.profiles[profileName]) {\n            statsCache.profiles[profileName] = {\n                calls: 0,\n                hits: 0,\n            };\n        }\n\n        statsCache.profiles[profileName].calls++;\n    };\n}\n\n/**\n * @private\n *\n * @description\n * create a function that increments the number of calls and cache hits for the specific profile\n */\nexport function createOnCacheHitIncrementCallsAndHits(options: Options) {\n    return function () {\n        const { profiles } = statsCache;\n        const { profileName } = options;\n\n        if (!profiles[profileName]) {\n            profiles[profileName] = {\n                calls: 0,\n                hits: 0,\n            };\n        }\n\n        profiles[profileName].calls++;\n        profiles[profileName].hits++;\n    };\n}\n\n/**\n * @private\n *\n * @description\n * get the profileName for the function when one is not provided\n *\n * @param fn the function to be memoized\n * @returns the derived profileName for the function\n */\nexport function getDefaultProfileName(\n    fn: Fn | FunctionalComponent<Record<string, unknown>>\n) {\n    const stack = new Error().stack;\n    const fnName =\n        (fn as FunctionalComponent<Record<string, unknown>>).displayName ||\n        fn.name ||\n        `Anonymous ${statsCache.anonymousProfileNameCounter++}`;\n\n    if (!stack) {\n        return fnName;\n    }\n\n    const lines = stack.split('\\n').slice(3);\n\n    let line: string;\n    let profileNameLocation: string;\n\n    for (let index = 0; index < lines.length; index++) {\n        line = lines[index];\n\n        if (\n            line.indexOf('/moize/') === -1 &&\n            line.indexOf(' (native)') === -1 &&\n            line.indexOf(' Function.') === -1\n        ) {\n            profileNameLocation = line.replace(/\\n/g, '\\\\n').trim();\n            break;\n        }\n    }\n\n    return profileNameLocation ? `${fnName} ${profileNameLocation}` : fnName;\n}\n\n/**\n * @private\n *\n * @description\n * get the usage percentage based on the number of hits and total calls\n *\n * @param calls the number of calls made\n * @param hits the number of cache hits when called\n * @returns the usage as a percentage string\n */\nexport function getUsagePercentage(calls: number, hits: number) {\n    return calls ? `${((hits / calls) * 100).toFixed(4)}%` : '0.0000%';\n}\n\n/**\n * @private\n *\n * @description\n * get the statistics for a given method or all methods\n *\n * @param [profileName] the profileName to get the statistics for (get all when not provided)\n * @returns the object with stats information\n */\nexport function getStats(profileName?: string): GlobalStatsObject {\n    if (!statsCache.isCollectingStats && !hasWarningDisplayed) {\n        console.warn(\n            'Stats are not currently being collected, please run \"collectStats\" to enable them.'\n        ); // eslint-disable-line no-console\n\n        hasWarningDisplayed = true;\n    }\n\n    const { profiles } = statsCache;\n\n    if (profileName) {\n        if (!profiles[profileName]) {\n            return {\n                calls: 0,\n                hits: 0,\n                usage: '0.0000%',\n            };\n        }\n\n        const { [profileName]: profile } = profiles;\n\n        return {\n            ...profile,\n            usage: getUsagePercentage(profile.calls, profile.hits),\n        };\n    }\n\n    const completeStats: StatsProfile = Object.keys(statsCache.profiles).reduce(\n        (completeProfiles, profileName) => {\n            completeProfiles.calls += profiles[profileName].calls;\n            completeProfiles.hits += profiles[profileName].hits;\n\n            return completeProfiles;\n        },\n        {\n            calls: 0,\n            hits: 0,\n        }\n    );\n\n    return {\n        ...completeStats,\n        profiles: Object.keys(profiles).reduce(\n            (computedProfiles, profileName) => {\n                computedProfiles[profileName] = getStats(profileName);\n\n                return computedProfiles;\n            },\n            {} as Record<string, StatsProfile>\n        ),\n        usage: getUsagePercentage(completeStats.calls, completeStats.hits),\n    };\n}\n\n/**\n * @private\n *\n * @function getStatsOptions\n *\n * @description\n * get the options specific to storing statistics\n *\n * @param {Options} options the options passed to the moizer\n * @returns {Object} the options specific to keeping stats\n */\nexport function getStatsOptions(\n    options: Options\n): {\n    onCacheAdd?: OnCacheOperation;\n    onCacheHit?: OnCacheOperation;\n} {\n    return statsCache.isCollectingStats\n        ? {\n              onCacheAdd: createOnCacheAddIncrementCalls(options),\n              onCacheHit: createOnCacheHitIncrementCallsAndHits(options),\n          }\n        : {};\n}\n","import { clearExpiration } from './maxAge';\nimport { clearStats, getStats } from './stats';\nimport {\n    Fn,\n    Key,\n    Memoized,\n    Moizeable,\n    MoizeConfiguration,\n    Moized,\n    Options,\n    StatsProfile,\n} from './types';\nimport { createFindKeyIndex } from './utils';\n\nconst ALWAYS_SKIPPED_PROPERTIES = {\n    constructor: true,\n    length: true,\n    name: true,\n    prototype: true,\n};\n\n/**\n * @private\n *\n * @description\n * copy the static properties from the original function to the moized\n * function\n *\n * @param originalFn the function copying from\n * @param newFn the function copying to\n * @param skippedProperties the list of skipped properties, if any\n */\nexport function copyStaticProperties(\n    originalFn: Fn,\n    newFn: Fn,\n    skippedProperties: string[] = []\n) {\n    Object.getOwnPropertyNames(originalFn).forEach((property) => {\n        if (\n            !ALWAYS_SKIPPED_PROPERTIES[\n                property as keyof typeof ALWAYS_SKIPPED_PROPERTIES\n            ] &&\n            skippedProperties.indexOf(property) === -1\n        ) {\n            const descriptor = Object.getOwnPropertyDescriptor(\n                originalFn,\n                property\n            );\n\n            if (descriptor.get || descriptor.set) {\n                Object.defineProperty(newFn, property, descriptor);\n            } else {\n                newFn[property as keyof typeof newFn] =\n                    originalFn[property as keyof typeof originalFn];\n            }\n        }\n    });\n}\n\n/**\n * @private\n *\n * @description\n * add methods to the moized fuction object that allow extra features\n *\n * @param memoized the memoized function from micro-memoize\n */\nexport function addInstanceMethods<OriginalFn extends Fn>(\n    memoized: Moizeable,\n    { expirations }: MoizeConfiguration<OriginalFn>\n) {\n    const { options } = memoized;\n\n    const findKeyIndex = createFindKeyIndex(\n        options.isEqual,\n        options.isMatchingKey\n    );\n\n    const moized = (memoized as unknown) as Moized<OriginalFn, Options>;\n\n    moized.clear = function () {\n        const {\n            _microMemoizeOptions: { onCacheChange },\n            cache,\n        } = moized;\n\n        cache.keys.length = 0;\n        cache.values.length = 0;\n\n        if (onCacheChange) {\n            onCacheChange(cache, moized.options, moized);\n        }\n\n        return true;\n    };\n\n    moized.clearStats = function () {\n        clearStats(moized.options.profileName);\n    };\n\n    moized.get = function (key: Key) {\n        const {\n            _microMemoizeOptions: { transformKey },\n            cache,\n        } = moized;\n\n        const cacheKey = transformKey ? transformKey(key) : key;\n        const keyIndex = findKeyIndex(cache.keys, cacheKey);\n\n        return keyIndex !== -1 ? moized.apply(this, key) : undefined;\n    };\n\n    moized.getStats = function (): StatsProfile {\n        return getStats(moized.options.profileName);\n    };\n\n    moized.has = function (key: Key) {\n        const { transformKey } = moized._microMemoizeOptions;\n\n        const cacheKey = transformKey ? transformKey(key) : key;\n\n        return findKeyIndex(moized.cache.keys, cacheKey) !== -1;\n    };\n\n    moized.keys = function () {\n        return moized.cacheSnapshot.keys;\n    };\n\n    moized.remove = function (key: Key) {\n        const {\n            _microMemoizeOptions: { onCacheChange, transformKey },\n            cache,\n        } = moized;\n\n        const keyIndex = findKeyIndex(\n            cache.keys,\n            transformKey ? transformKey(key) : key\n        );\n\n        if (keyIndex === -1) {\n            return false;\n        }\n\n        const existingKey = cache.keys[keyIndex];\n\n        cache.keys.splice(keyIndex, 1);\n        cache.values.splice(keyIndex, 1);\n\n        if (onCacheChange) {\n            onCacheChange(cache, moized.options, moized);\n        }\n\n        clearExpiration(expirations, existingKey, true);\n\n        return true;\n    };\n\n    moized.set = function (key: Key, value: any) {\n        const { _microMemoizeOptions, cache, options } = moized;\n        const {\n            onCacheAdd,\n            onCacheChange,\n            transformKey,\n        } = _microMemoizeOptions;\n\n        const cacheKey = transformKey ? transformKey(key) : key;\n        const keyIndex = findKeyIndex(cache.keys, cacheKey);\n\n        if (keyIndex === -1) {\n            const cutoff = options.maxSize - 1;\n\n            if (cache.size > cutoff) {\n                cache.keys.length = cutoff;\n                cache.values.length = cutoff;\n            }\n\n            cache.keys.unshift(cacheKey);\n            cache.values.unshift(value);\n\n            if (options.isPromise) {\n                cache.updateAsyncCache(moized);\n            }\n\n            if (onCacheAdd) {\n                onCacheAdd(cache, options, moized);\n            }\n\n            if (onCacheChange) {\n                onCacheChange(cache, options, moized);\n            }\n        } else {\n            const existingKey = cache.keys[keyIndex];\n\n            cache.values[keyIndex] = value;\n\n            if (keyIndex > 0) {\n                cache.orderByLru(existingKey, value, keyIndex);\n            }\n\n            if (options.isPromise) {\n                cache.updateAsyncCache(moized);\n            }\n\n            if (typeof onCacheChange === 'function') {\n                onCacheChange(cache, options, moized);\n            }\n        }\n    };\n\n    moized.values = function () {\n        return moized.cacheSnapshot.values;\n    };\n}\n\n/**\n * @private\n *\n * @description\n * add propeties to the moized fuction object that surfaces extra information\n *\n * @param memoized the memoized function\n * @param expirations the list of expirations for cache items\n * @param options the options passed to the moizer\n * @param originalFunction the function that is being memoized\n */\nexport function addInstanceProperties<OriginalFn extends Moizeable>(\n    memoized: Memoized<OriginalFn>,\n    {\n        expirations,\n        options: moizeOptions,\n        originalFunction,\n    }: MoizeConfiguration<OriginalFn>\n) {\n    const { options: microMemoizeOptions } = memoized;\n\n    Object.defineProperties(memoized, {\n        _microMemoizeOptions: {\n            configurable: true,\n            get() {\n                return microMemoizeOptions;\n            },\n        },\n\n        cacheSnapshot: {\n            configurable: true,\n            get() {\n                const { cache: currentCache } = memoized;\n\n                return {\n                    keys: currentCache.keys.slice(0),\n                    size: currentCache.size,\n                    values: currentCache.values.slice(0),\n                };\n            },\n        },\n\n        expirations: {\n            configurable: true,\n            get() {\n                return expirations;\n            },\n        },\n\n        expirationsSnapshot: {\n            configurable: true,\n            get() {\n                return expirations.slice(0);\n            },\n        },\n\n        isMoized: {\n            configurable: true,\n            get() {\n                return true;\n            },\n        },\n\n        options: {\n            configurable: true,\n            get() {\n                return moizeOptions;\n            },\n        },\n\n        originalFunction: {\n            configurable: true,\n            get() {\n                return originalFunction;\n            },\n        },\n    });\n\n    const moized = (memoized as unknown) as Moized<OriginalFn, Options>;\n\n    copyStaticProperties(originalFunction, moized);\n}\n\n/**\n * @private\n *\n * @description\n * add methods and properties to the memoized function for more features\n *\n * @param memoized the memoized function\n * @param configuration the configuration object for the instance\n * @returns the memoized function passed\n */\nexport function createMoizeInstance<\n    OriginalFn extends Moizeable,\n    CombinedOptions extends Options\n>(\n    memoized: Memoized<OriginalFn>,\n    configuration: MoizeConfiguration<OriginalFn>\n) {\n    addInstanceMethods<OriginalFn>(memoized, configuration);\n    addInstanceProperties<OriginalFn>(memoized, configuration);\n\n    return memoized as Moized<OriginalFn, CombinedOptions>;\n}\n","import { copyStaticProperties } from './instance';\nimport { Moize, Moizeable, Options } from './types';\n\n// This was stolen from React internals, which allows us to create React elements without needing\n// a dependency on the React library itself.\nconst REACT_ELEMENT_TYPE =\n    typeof Symbol === 'function' && Symbol.for\n        ? Symbol.for('react.element')\n        : 0xeac7;\n\n/**\n * @private\n *\n * @description\n * Create a component that memoizes based on `props` and legacy `context`\n * on a per-instance basis. This requires creating a component class to\n * store the memoized function. The cost is quite low, and avoids the\n * need to have access to the React dependency by basically re-creating\n * the basic essentials for a component class and the results of the\n * `createElement` function.\n *\n * @param moizer the top-level moize method\n * @param fn the component to memoize\n * @param options the memoization options\n * @returns the memoized component\n */\nexport function createMoizedComponent<OriginalFn extends Moizeable>(\n    moizer: Moize,\n    fn: OriginalFn,\n    options: Options\n) {\n    /**\n     * This is a hack override setting the necessary options\n     * for a React component to be memoized. In the main `moize`\n     * method, if the `isReact` option is set it is short-circuited\n     * to call this function, and these overrides allow the\n     * necessary transformKey method to be derived.\n     *\n     * The order is based on:\n     * 1) Set the necessary aspects of transformKey for React components.\n     * 2) Allow setting of other options and overrides of those aspects\n     *    if desired (for example, `isDeepEqual` will use deep equality).\n     * 3) Always set `isReact` to false to prevent infinite loop.\n     */\n    const reactMoizer = moizer({\n        maxArgs: 2,\n        isShallowEqual: true,\n        ...options,\n        isReact: false,\n    });\n\n    if (!fn.displayName) {\n        // @ts-ignore - allow setting of displayName\n        fn.displayName = fn.name || 'Component';\n    }\n\n    function Moized<\n        Props extends Record<string, unknown>,\n        Context extends any,\n        Updater extends any\n    >(this: any, props: Props, context: Context, updater: Updater) {\n        this.props = props;\n        this.context = context;\n        this.updater = updater;\n\n        this.MoizedComponent = reactMoizer(fn);\n    }\n\n    Moized.prototype.isReactComponent = {};\n\n    Moized.prototype.render = function () {\n        return {\n            $$typeof: REACT_ELEMENT_TYPE,\n            type: this.MoizedComponent,\n            props: this.props,\n            ref: null,\n            key: null,\n            _owner: null,\n        } as JSX.Element;\n    };\n\n    copyStaticProperties(fn, Moized, ['contextType', 'contextTypes']);\n\n    Moized.displayName = `Moized(${fn.displayName || fn.name || 'Component'})`;\n\n    return Moized;\n}\n","import { Key } from './types';\n\nexport function createGetInitialArgs(size: number) {\n    /**\n     * @private\n     *\n     * @description\n     * take the first N number of items from the array (faster than slice)\n     *\n     * @param args the args to take from\n     * @returns the shortened list of args as an array\n     */\n    return function (args: Key): Key {\n        if (size >= args.length) {\n            return args;\n        }\n\n        if (size === 0) {\n            return [];\n        }\n\n        if (size === 1) {\n            return [args[0]];\n        }\n\n        if (size === 2) {\n            return [args[0], args[1]];\n        }\n\n        if (size === 3) {\n            return [args[0], args[1], args[2]];\n        }\n\n        const clone = [];\n\n        for (let index = 0; index < size; index++) {\n            clone[index] = args[index];\n        }\n\n        return clone;\n    };\n}\n","import { Key, Options } from './types';\n\n/**\n * @function getCutoff\n *\n * @description\n * faster `Array.prototype.indexOf` implementation build for slicing / splicing\n *\n * @param array the array to match the value in\n * @param value the value to match\n * @returns the matching index, or -1\n */\nfunction getCutoff(array: any[], value: any) {\n    const { length } = array;\n\n    for (let index = 0; index < length; ++index) {\n        if (array[index] === value) {\n            return index + 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * @private\n *\n * @description\n * custom replacer for the stringify function\n *\n * @returns if function then toString of it, else the value itself\n */\nexport function createDefaultReplacer() {\n    const cache: any[] = [];\n    const keys: string[] = [];\n\n    return function defaultReplacer(key: string, value: any) {\n        const type = typeof value;\n\n        if (type === 'function' || type === 'symbol') {\n            return value.toString();\n        }\n\n        if (typeof value === 'object') {\n            if (cache.length) {\n                const thisCutoff = getCutoff(cache, this);\n        \n                if (thisCutoff === 0) {\n                    cache[cache.length] = this;\n                } else {\n                    cache.splice(thisCutoff);\n                    keys.splice(thisCutoff);\n                }\n        \n                keys[keys.length] = key;\n        \n                const valueCutoff = getCutoff(cache, value);\n        \n                if (valueCutoff !== 0) {\n                    return `[ref=${keys.slice(0, valueCutoff).join('.') || '.'}]`;\n                }\n            } else {\n                cache[0] = value;\n                keys[0] = key;\n            }\n\n            return value;\n        }\n\n        return '' + value;\n    };\n}\n\n/**\n * @private\n *\n * @description\n * get the stringified version of the argument passed\n *\n * @param arg argument to stringify\n * @returns the stringified argument\n */\nexport function getStringifiedArgument<Type>(arg: Type) {\n    const typeOfArg = typeof arg;\n\n    return arg && (typeOfArg === 'object' || typeOfArg === 'function')\n        ? JSON.stringify(arg, createDefaultReplacer())\n        : arg;\n}\n\n/**\n * @private\n *\n * @description\n * serialize the arguments passed\n *\n * @param options the options passed to the moizer\n * @param options.maxArgs the cap on the number of arguments used in serialization\n * @returns argument serialization method\n */\nexport function defaultArgumentSerializer(args: Key) {\n    let key = '|';\n\n    for (let index = 0; index < args.length; index++) {\n        key += getStringifiedArgument(args[index]) + '|';\n    }\n\n    return [key];\n}\n\n/**\n * @private\n *\n * @description\n * based on the options passed, either use the serializer passed or generate the internal one\n *\n * @param options the options passed to the moized function\n * @returns the function to use in serializing the arguments\n */\nexport function getSerializerFunction(options: Options) {\n    return typeof options.serializer === 'function'\n        ? options.serializer\n        : defaultArgumentSerializer;\n}\n\n/**\n * @private\n *\n * @description\n * are the serialized keys equal to one another\n *\n * @param cacheKey the cache key to compare\n * @param key the key to test\n * @returns are the keys equal\n */\nexport function getIsSerializedKeyEqual(cacheKey: Key, key: Key) {\n    return cacheKey[0] === key[0];\n}\n","import { deepEqual, sameValueZeroEqual, shallowEqual } from 'fast-equals';\nimport { createGetInitialArgs } from './maxArgs';\nimport { getIsSerializedKeyEqual, getSerializerFunction } from './serialize';\nimport {\n    Cache,\n    IsEqual,\n    IsMatchingKey,\n    MicroMemoizeOptions,\n    Moized,\n    OnCacheOperation,\n    Options,\n    TransformKey,\n} from './types';\nimport { compose } from './utils';\n\nexport function createOnCacheOperation(\n    fn?: OnCacheOperation\n): OnCacheOperation {\n    if (typeof fn === 'function') {\n        return (\n            _cacheIgnored: Cache,\n            _microMemoizeOptionsIgnored: MicroMemoizeOptions,\n            memoized: Moized\n        ): void => fn(memoized.cache, memoized.options, memoized);\n    }\n}\n\n/**\n * @private\n *\n * @description\n * get the isEqual method passed to micro-memoize\n *\n * @param options the options passed to the moizer\n * @returns the isEqual method to apply\n */\nexport function getIsEqual(options: Options): IsEqual {\n    return (\n        options.matchesArg ||\n        (options.isDeepEqual && deepEqual) ||\n        (options.isShallowEqual && shallowEqual) ||\n        sameValueZeroEqual\n    );\n}\n\n/**\n * @private\n *\n * @description\n * get the isEqual method passed to micro-memoize\n *\n * @param options the options passed to the moizer\n * @returns the isEqual method to apply\n */\nexport function getIsMatchingKey(options: Options): IsMatchingKey | undefined {\n    return (\n        options.matchesKey ||\n        (options.isSerialized && getIsSerializedKeyEqual) ||\n        undefined\n    );\n}\n\n/**\n * @private\n *\n * @description\n * get the function that will transform the key based on the arguments passed\n *\n * @param options the options passed to the moizer\n * @returns the function to transform the key with\n */\nexport function getTransformKey(options: Options): TransformKey | undefined {\n    return compose(\n        options.isSerialized && getSerializerFunction(options),\n        typeof options.transformArgs === 'function' && options.transformArgs,\n        typeof options.maxArgs === 'number' &&\n            createGetInitialArgs(options.maxArgs)\n    ) as TransformKey;\n}\n","import { copyStaticProperties } from './instance';\n\nimport type { Moized } from './types';\n\nexport function createRefreshableMoized<MoizedFn extends Moized>(\n    moized: MoizedFn\n) {\n    const {\n        options: { updateCacheForKey },\n    } = moized;\n\n    /**\n     * @private\n     *\n     * @description\n     * Wrapper around already-`moize`d function which will intercept the memoization\n     * and call the underlying function directly with the purpose of updating the cache\n     * for the given key.\n     *\n     * Promise values use a tweak of the logic that exists at cache.updateAsyncCache, which\n     * reverts to the original value if the promise is rejected and there was already a cached\n     * value.\n     */\n    function refreshableMoized(\n        this: any,\n        ...args: Parameters<typeof moized.fn>\n    ) {\n        if (!updateCacheForKey(args)) {\n            return moized.apply(this, args);\n        }\n\n        const result = moized.fn.apply(this, args);\n\n        moized.set(args, result);\n\n        return result;\n    }\n\n    copyStaticProperties(moized, refreshableMoized);\n\n    return refreshableMoized as MoizedFn;\n}\n","import memoize from 'micro-memoize';\nimport { createMoizedComponent } from './component';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { createMoizeInstance } from './instance';\nimport { getMaxAgeOptions } from './maxAge';\nimport {\n    createOnCacheOperation,\n    getIsEqual,\n    getIsMatchingKey,\n    getTransformKey,\n} from './options';\nimport {\n    clearStats,\n    collectStats,\n    getDefaultProfileName,\n    getStats,\n    getStatsOptions,\n    statsCache,\n} from './stats';\nimport {\n    Expiration,\n    IsEqual,\n    IsMatchingKey,\n    MicroMemoizeOptions,\n    Moize,\n    Moizeable,\n    Moized,\n    OnExpire,\n    Options,\n    Serialize,\n    TransformKey,\n    UpdateCacheForKey,\n} from './types';\nimport { createRefreshableMoized } from './updateCacheForKey';\nimport { combine, compose, isMoized, mergeOptions } from './utils';\n\nexport * from './types';\n\n/**\n * @module moize\n */\n\n/**\n * @description\n * memoize a function based its arguments passed, potentially improving runtime performance\n *\n * @example\n * import moize from 'moize';\n *\n * // standard implementation\n * const fn = (foo, bar) => `${foo} ${bar}`;\n * const memoizedFn = moize(fn);\n *\n * // implementation with options\n * const fn = async (id) => get(`http://foo.com/${id}`);\n * const memoizedFn = moize(fn, {isPromise: true, maxSize: 5});\n *\n * // implementation with convenience methods\n * const Foo = ({foo}) => <div>{foo}</div>;\n * const MemoizedFoo = moize.react(Foo);\n *\n * @param fn the function to memoized, or a list of options when currying\n * @param [options=DEFAULT_OPTIONS] the options to apply\n * @returns the memoized function\n */\nconst moize: Moize = function <\n    Fn extends Moizeable,\n    PassedOptions extends Options\n>(fn: Fn | PassedOptions, passedOptions?: PassedOptions) {\n    type CombinedOptions = Options & PassedOptions;\n\n    const options: Options = passedOptions || DEFAULT_OPTIONS;\n\n    if (isMoized(fn)) {\n        const moizeable = fn.originalFunction as Fn;\n        const mergedOptions = mergeOptions(\n            fn.options,\n            options\n        ) as CombinedOptions;\n\n        return moize<Fn, CombinedOptions>(moizeable, mergedOptions);\n    }\n\n    if (typeof fn === 'object') {\n        return function <\n            CurriedFn extends Moizeable,\n            CurriedOptions extends Options\n        >(\n            curriedFn: CurriedFn | CurriedOptions,\n            curriedOptions: CurriedOptions\n        ) {\n            type CombinedCurriedOptions = CombinedOptions & CurriedOptions;\n\n            if (typeof curriedFn === 'function') {\n                const mergedOptions = mergeOptions(\n                    fn as CombinedOptions,\n                    curriedOptions\n                ) as CombinedCurriedOptions;\n\n                return moize(curriedFn, mergedOptions);\n            }\n\n            const mergedOptions = mergeOptions(\n                fn as CombinedOptions,\n                curriedFn as CurriedOptions\n            );\n\n            return moize(mergedOptions);\n        };\n    }\n\n    if (options.isReact) {\n        return createMoizedComponent(moize, fn, options);\n    }\n\n    const coalescedOptions: Options = {\n        ...DEFAULT_OPTIONS,\n        ...options,\n        maxAge:\n            typeof options.maxAge === 'number' && options.maxAge >= 0\n                ? options.maxAge\n                : DEFAULT_OPTIONS.maxAge,\n        maxArgs:\n            typeof options.maxArgs === 'number' && options.maxArgs >= 0\n                ? options.maxArgs\n                : DEFAULT_OPTIONS.maxArgs,\n        maxSize:\n            typeof options.maxSize === 'number' && options.maxSize >= 0\n                ? options.maxSize\n                : DEFAULT_OPTIONS.maxSize,\n        profileName: options.profileName || getDefaultProfileName(fn),\n    };\n    const expirations: Array<Expiration> = [];\n\n    const {\n        matchesArg: equalsIgnored,\n        isDeepEqual: isDeepEqualIgnored,\n        isPromise,\n        isReact: isReactIgnored,\n        isSerialized: isSerialzedIgnored,\n        isShallowEqual: isShallowEqualIgnored,\n        matchesKey: matchesKeyIgnored,\n        maxAge: maxAgeIgnored,\n        maxArgs: maxArgsIgnored,\n        maxSize,\n        onCacheAdd,\n        onCacheChange,\n        onCacheHit,\n        onExpire: onExpireIgnored,\n        profileName: profileNameIgnored,\n        serializer: serializerIgnored,\n        updateCacheForKey,\n        transformArgs: transformArgsIgnored,\n        updateExpire: updateExpireIgnored,\n        ...customOptions\n    } = coalescedOptions;\n\n    const isEqual = getIsEqual(coalescedOptions);\n    const isMatchingKey = getIsMatchingKey(coalescedOptions);\n\n    const maxAgeOptions = getMaxAgeOptions(\n        expirations,\n        coalescedOptions,\n        isEqual,\n        isMatchingKey\n    );\n    const statsOptions = getStatsOptions(coalescedOptions);\n\n    const transformKey = getTransformKey(coalescedOptions);\n\n    const microMemoizeOptions: MicroMemoizeOptions = {\n        ...customOptions,\n        isEqual,\n        isMatchingKey,\n        isPromise,\n        maxSize,\n        onCacheAdd: createOnCacheOperation(\n            combine(\n                onCacheAdd,\n                maxAgeOptions.onCacheAdd,\n                statsOptions.onCacheAdd\n            )\n        ),\n        onCacheChange: createOnCacheOperation(onCacheChange),\n        onCacheHit: createOnCacheOperation(\n            combine(\n                onCacheHit,\n                maxAgeOptions.onCacheHit,\n                statsOptions.onCacheHit\n            )\n        ),\n        transformKey,\n    };\n\n    const memoized = memoize(fn, microMemoizeOptions);\n\n    const moized = createMoizeInstance<Fn, CombinedOptions>(memoized, {\n        expirations,\n        options: coalescedOptions,\n        originalFunction: fn,\n    });\n\n    if (updateCacheForKey) {\n        return createRefreshableMoized<typeof moized>(moized);\n    }\n\n    return moized;\n};\n\n/**\n * @function\n * @name clearStats\n * @memberof module:moize\n * @alias moize.clearStats\n *\n * @description\n * clear all existing stats stored\n */\nmoize.clearStats = clearStats;\n\n/**\n * @function\n * @name collectStats\n * @memberof module:moize\n * @alias moize.collectStats\n *\n * @description\n * start collecting statistics\n */\nmoize.collectStats = collectStats;\n\n/**\n * @function\n * @name compose\n * @memberof module:moize\n * @alias moize.compose\n *\n * @description\n * method to compose moized methods and return a single moized function\n *\n * @param moized the functions to compose\n * @returns the composed function\n */\nmoize.compose = function (...moized: Moize[]) {\n    return compose<Moize>(...moized) || moize;\n};\n\n/**\n * @function\n * @name deep\n * @memberof module:moize\n * @alias moize.deep\n *\n * @description\n * should deep equality check be used\n *\n * @returns the moizer function\n */\nmoize.deep = moize({ isDeepEqual: true });\n\n/**\n * @function\n * @name getStats\n * @memberof module:moize\n * @alias moize.getStats\n *\n * @description\n * get the statistics of a given profile, or overall usage\n *\n * @returns statistics for a given profile or overall usage\n */\nmoize.getStats = getStats;\n\n/**\n * @function\n * @name infinite\n * @memberof module:moize\n * @alias moize.infinite\n *\n * @description\n * a moized method that will remove all limits from the cache size\n *\n * @returns the moizer function\n */\nmoize.infinite = moize({ maxSize: Infinity });\n\n/**\n * @function\n * @name isCollectingStats\n * @memberof module:moize\n * @alias moize.isCollectingStats\n *\n * @description\n * are stats being collected\n *\n * @returns are stats being collected\n */\nmoize.isCollectingStats = function isCollectingStats(): boolean {\n    return statsCache.isCollectingStats;\n};\n\n/**\n * @function\n * @name isMoized\n * @memberof module:moize\n * @alias moize.isMoized\n *\n * @description\n * is the fn passed a moized function\n *\n * @param fn the object to test\n * @returns is fn a moized function\n */\nmoize.isMoized = function isMoized(fn: any): fn is Moized {\n    return typeof fn === 'function' && !!fn.isMoized;\n};\n\n/**\n * @function\n * @name matchesArg\n * @memberof module:moize\n * @alias moize.matchesArg\n *\n * @description\n * a moized method where the arg matching method is the custom one passed\n *\n * @param keyMatcher the method to compare against those in cache\n * @returns the moizer function\n */\nmoize.matchesArg = function (argMatcher: IsEqual) {\n    return moize({ matchesArg: argMatcher });\n};\n\n/**\n * @function\n * @name matchesKey\n * @memberof module:moize\n * @alias moize.matchesKey\n *\n * @description\n * a moized method where the key matching method is the custom one passed\n *\n * @param keyMatcher the method to compare against those in cache\n * @returns the moizer function\n */\nmoize.matchesKey = function (keyMatcher: IsMatchingKey) {\n    return moize({ matchesKey: keyMatcher });\n};\n\nfunction maxAge<MaxAge extends number>(\n    maxAge: MaxAge\n): Moize<{ maxAge: MaxAge }>;\nfunction maxAge<MaxAge extends number, UpdateExpire extends boolean>(\n    maxAge: MaxAge,\n    expireOptions: UpdateExpire\n): Moize<{ maxAge: MaxAge; updateExpire: UpdateExpire }>;\nfunction maxAge<MaxAge extends number, ExpireHandler extends OnExpire>(\n    maxAge: MaxAge,\n    expireOptions: ExpireHandler\n): Moize<{ maxAge: MaxAge; onExpire: ExpireHandler }>;\nfunction maxAge<\n    MaxAge extends number,\n    ExpireHandler extends OnExpire,\n    ExpireOptions extends {\n        onExpire: ExpireHandler;\n    }\n>(\n    maxAge: MaxAge,\n    expireOptions: ExpireOptions\n): Moize<{ maxAge: MaxAge; onExpire: ExpireOptions['onExpire'] }>;\nfunction maxAge<\n    MaxAge extends number,\n    UpdateExpire extends boolean,\n    ExpireOptions extends {\n        updateExpire: UpdateExpire;\n    }\n>(\n    maxAge: MaxAge,\n    expireOptions: ExpireOptions\n): Moize<{ maxAge: MaxAge; updateExpire: UpdateExpire }>;\nfunction maxAge<\n    MaxAge extends number,\n    ExpireHandler extends OnExpire,\n    UpdateExpire extends boolean,\n    ExpireOptions extends {\n        onExpire: ExpireHandler;\n        updateExpire: UpdateExpire;\n    }\n>(\n    maxAge: MaxAge,\n    expireOptions: ExpireOptions\n): Moize<{\n    maxAge: MaxAge;\n    onExpire: ExpireHandler;\n    updateExpire: UpdateExpire;\n}>;\nfunction maxAge<\n    MaxAge extends number,\n    ExpireHandler extends OnExpire,\n    UpdateExpire extends boolean,\n    ExpireOptions extends {\n        onExpire?: ExpireHandler;\n        updateExpire?: UpdateExpire;\n    }\n>(\n    maxAge: MaxAge,\n    expireOptions?: ExpireHandler | UpdateExpire | ExpireOptions\n) {\n    if (expireOptions === true) {\n        return moize({\n            maxAge,\n            updateExpire: expireOptions,\n        });\n    }\n\n    if (typeof expireOptions === 'object') {\n        const { onExpire, updateExpire } = expireOptions;\n\n        return moize({\n            maxAge,\n            onExpire,\n            updateExpire,\n        });\n    }\n\n    if (typeof expireOptions === 'function') {\n        return moize({\n            maxAge,\n            onExpire: expireOptions,\n            updateExpire: true,\n        });\n    }\n\n    return moize({ maxAge });\n}\n\n/**\n * @function\n * @name maxAge\n * @memberof module:moize\n * @alias moize.maxAge\n *\n * @description\n * a moized method where the age of the cache is limited to the number of milliseconds passed\n *\n * @param maxAge the TTL of the value in cache\n * @returns the moizer function\n */\nmoize.maxAge = maxAge;\n\n/**\n * @function\n * @name maxArgs\n * @memberof module:moize\n * @alias moize.maxArgs\n *\n * @description\n * a moized method where the number of arguments used for determining cache is limited to the value passed\n *\n * @param maxArgs the number of args to base the key on\n * @returns the moizer function\n */\nmoize.maxArgs = function maxArgs(maxArgs: number) {\n    return moize({ maxArgs });\n};\n\n/**\n * @function\n * @name maxSize\n * @memberof module:moize\n * @alias moize.maxSize\n *\n * @description\n * a moized method where the total size of the cache is limited to the value passed\n *\n * @param maxSize the maximum size of the cache\n * @returns the moizer function\n */\nmoize.maxSize = function maxSize(maxSize: number) {\n    return moize({ maxSize });\n};\n\n/**\n * @function\n * @name profile\n * @memberof module:moize\n * @alias moize.profile\n *\n * @description\n * a moized method with a profile name\n *\n * @returns the moizer function\n */\nmoize.profile = function (profileName: string) {\n    return moize({ profileName });\n};\n\n/**\n * @function\n * @name promise\n * @memberof module:moize\n * @alias moize.promise\n *\n * @description\n * a moized method specific to caching resolved promise / async values\n *\n * @returns the moizer function\n */\nmoize.promise = moize({\n    isPromise: true,\n    updateExpire: true,\n});\n\n/**\n * @function\n * @name react\n * @memberof module:moize\n * @alias moize.react\n *\n * @description\n * a moized method specific to caching React element values\n *\n * @returns the moizer function\n */\nmoize.react = moize({ isReact: true });\n\n/**\n * @function\n * @name serialize\n * @memberof module:moize\n * @alias moize.serialize\n *\n * @description\n * a moized method that will serialize the arguments passed to use as the cache key\n *\n * @returns the moizer function\n */\nmoize.serialize = moize({ isSerialized: true });\n\n/**\n * @function\n * @name serializeWith\n * @memberof module:moize\n * @alias moize.serializeWith\n *\n * @description\n * a moized method that will serialize the arguments passed to use as the cache key\n * based on the serializer passed\n *\n * @returns the moizer function\n */\nmoize.serializeWith = function (serializer: Serialize) {\n    return moize({ isSerialized: true, serializer });\n};\n\n/**\n * @function\n * @name shallow\n * @memberof module:moize\n * @alias moize.shallow\n *\n * @description\n * should shallow equality check be used\n *\n * @returns the moizer function\n */\nmoize.shallow = moize({ isShallowEqual: true });\n\n/**\n * @function\n * @name transformArgs\n * @memberof module:moize\n * @alias moize.transformArgs\n *\n * @description\n * transform the args to allow for specific cache key comparison\n *\n * @param transformArgs the args transformer\n * @returns the moizer function\n */\nmoize.transformArgs = <Transformer extends TransformKey>(\n    transformArgs: Transformer\n) => moize({ transformArgs });\n\n/**\n * @function\n * @name updateCacheForKey\n * @memberof module:moize\n * @alias moize.updateCacheForKey\n *\n * @description\n * update the cache for a given key when the method passed returns truthy\n *\n * @param updateCacheForKey the method to determine when to update cache\n * @returns the moizer function\n */\nmoize.updateCacheForKey = <UpdateWhen extends UpdateCacheForKey>(\n    updateCacheForKey: UpdateWhen\n) => moize({ updateCacheForKey });\n\nexport default moize;\n"],"names":["DEFAULT_OPTIONS","isDeepEqual","isPromise","isReact","isSerialized","isShallowEqual","matchesArg","undefined","matchesKey","maxAge","maxArgs","maxSize","onExpire","profileName","serializer","updateCacheForKey","transformArgs","updateExpire","combine","functions","reduce","f","g","apply","arguments","compose","findExpirationIndex","expirations","key","index","length","createFindKeyIndex","isEqual","isMatchingKey","areKeysEqual","cacheKey","keys","keysIndex","mergeOptions","originalOptions","newOptions","onCacheAdd","onCacheChange","onCacheHit","isMoized","fn","clearExpiration","shouldRemove","expirationIndex","clearTimeout","timeoutId","splice","createTimeout","expirationMethod","setTimeout","unref","createOnCacheAddSetExpiration","options","cache","moizedOptions","moized","findKeyIndex","keyIndex","value","values","unshift","push","createOnCacheHitResetExpiration","getMaxAgeOptions","isFinite","statsCache","anonymousProfileNameCounter","isCollectingStats","profiles","hasWarningDisplayed","clearStats","collectStats","createOnCacheAddIncrementCalls","calls","hits","createOnCacheHitIncrementCallsAndHits","getDefaultProfileName","stack","Error","fnName","displayName","name","lines","split","slice","line","profileNameLocation","indexOf","replace","trim","getUsagePercentage","toFixed","getStats","console","warn","usage","profile","completeStats","Object","completeProfiles","computedProfiles","getStatsOptions","ALWAYS_SKIPPED_PROPERTIES","constructor","prototype","copyStaticProperties","originalFn","newFn","skippedProperties","getOwnPropertyNames","forEach","property","descriptor","getOwnPropertyDescriptor","get","set","defineProperty","addInstanceMethods","memoized","clear","_microMemoizeOptions","transformKey","has","cacheSnapshot","remove","existingKey","cutoff","size","updateAsyncCache","orderByLru","addInstanceProperties","moizeOptions","originalFunction","microMemoizeOptions","defineProperties","configurable","currentCache","expirationsSnapshot","createMoizeInstance","configuration","REACT_ELEMENT_TYPE","Symbol","for","createMoizedComponent","moizer","reactMoizer","Moized","props","context","updater","MoizedComponent","isReactComponent","render","$$typeof","type","ref","_owner","createGetInitialArgs","args","clone","getCutoff","array","createDefaultReplacer","defaultReplacer","toString","thisCutoff","valueCutoff","join","getStringifiedArgument","arg","typeOfArg","JSON","stringify","defaultArgumentSerializer","getSerializerFunction","getIsSerializedKeyEqual","createOnCacheOperation","_cacheIgnored","_microMemoizeOptionsIgnored","getIsEqual","deepEqual","shallowEqual","sameValueZeroEqual","getIsMatchingKey","getTransformKey","createRefreshableMoized","refreshableMoized","result","moize","passedOptions","moizeable","mergedOptions","curriedFn","curriedOptions","coalescedOptions","equalsIgnored","isDeepEqualIgnored","isReactIgnored","isSerialzedIgnored","isShallowEqualIgnored","matchesKeyIgnored","maxAgeIgnored","maxArgsIgnored","onExpireIgnored","profileNameIgnored","serializerIgnored","transformArgsIgnored","updateExpireIgnored","customOptions","maxAgeOptions","statsOptions","memoize","deep","infinite","Infinity","argMatcher","keyMatcher","expireOptions","promise","react","serialize","serializeWith","shallow"],"mappings":"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"}